<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9d9a7623-25b8-4b95-8991-5b867a464609" name="Changes" comment="fix: add test and entities">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/horus/services/Wall.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/horus/services/Wall.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/horus/services/WallTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/horus/services/WallTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2ZPdo537YP0kw4knExdshGG1ajx" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "JUnit.WallServiceTests.testFindBlockByColor.executor": "Run",
    "JUnit.WallTests$CountTests.executor": "Run",
    "JUnit.WallTests$CountTests.shouldReturnAppropriateCountOfBlocksWhenGetCompositeBlockInput.executor": "Run",
    "JUnit.WallTests$CountTests.shouldReturnAppropriateCountOfBlocksWhenGetSimpleInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetComplexInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetCompositeBlockInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetNestedCompositeBlockInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetSimpleInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetVeryComplexInput.executor": "Run",
    "JUnit.WallTests$FindBlockByColorTests.shouldReturnFalseAtIsPresentSectionWhenBLocksWithGivenColorNoExists.executor": "Run",
    "JUnit.WallTests$FindBlocksByMaterialTests.executor": "Run",
    "JUnit.WallTests$FindBlocksByMaterialTests.shouldReturnAppropriateMaterialOfBlockWhenGetCompositeBlockInput.executor": "Run",
    "JUnit.WallTests$FindBlocksByMaterialTests.shouldReturnAppropriateMaterialOfBlockWhenGetNestedCompositeBlockInput.executor": "Run",
    "JUnit.WallTests$FindBlocksByMaterialTests.shouldReturnAppropriateMaterialOfBlockWhenGetSimpleInput.executor": "Run",
    "JUnit.WallTests$WallTests_1.testFindBlockByColor.executor": "Run",
    "JUnit.WallTests$testFindBlockByColor.executor": "Run",
    "JUnit.WallTests$testFindBlockByColor.testFindBlockByColor.executor": "Run",
    "JUnit.WallTests.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "extract.method.default.visibility": "private",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\K1\JavaProjects\HorusTask" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.WallTests">
    <configuration name="WallTests$CountTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HorusTask" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.horus.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.horus.services.WallTests" />
      <option name="MAIN_CLASS_NAME" value="org.horus.services.WallTests$CountTests" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetCompositeBlockInput" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HorusTask" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.horus.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.horus.services.WallTests" />
      <option name="MAIN_CLASS_NAME" value="org.horus.services.WallTests$FindBlockByColorTests" />
      <option name="METHOD_NAME" value="shouldReturnAppropriateColorOfBlockWhenGetCompositeBlockInput" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetVeryComplexInput" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HorusTask" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.horus.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.horus.services.WallTests" />
      <option name="MAIN_CLASS_NAME" value="org.horus.services.WallTests$FindBlockByColorTests" />
      <option name="METHOD_NAME" value="shouldReturnAppropriateColorOfBlockWhenGetVeryComplexInput" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WallTests$FindBlocksByMaterialTests.shouldReturnAppropriateMaterialOfBlockWhenGetNestedCompositeBlockInput" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HorusTask" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.horus.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.horus.services.WallTests" />
      <option name="MAIN_CLASS_NAME" value="org.horus.services.WallTests$FindBlocksByMaterialTests" />
      <option name="METHOD_NAME" value="shouldReturnAppropriateMaterialOfBlockWhenGetNestedCompositeBlockInput" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WallTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="HorusTask" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.horus.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.horus.services" />
      <option name="MAIN_CLASS_NAME" value="org.horus.services.WallTests" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.WallTests" />
        <item itemvalue="JUnit.WallTests$FindBlocksByMaterialTests.shouldReturnAppropriateMaterialOfBlockWhenGetNestedCompositeBlockInput" />
        <item itemvalue="JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetVeryComplexInput" />
        <item itemvalue="JUnit.WallTests$FindBlockByColorTests.shouldReturnAppropriateColorOfBlockWhenGetCompositeBlockInput" />
        <item itemvalue="JUnit.WallTests$CountTests" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9d9a7623-25b8-4b95-8991-5b867a464609" name="Changes" comment="" />
      <created>1702327848152</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1702327848152</updated>
      <workItem from="1702327851885" duration="4164000" />
      <workItem from="1702473670494" duration="61410000" />
      <workItem from="1702725720972" duration="2181000" />
      <workItem from="1702728603634" duration="10533000" />
      <workItem from="1703844716897" duration="22591000" />
      <workItem from="1703896919331" duration="1405000" />
      <workItem from="1703941987813" duration="1561000" />
      <workItem from="1704109243579" duration="4770000" />
    </task>
    <task id="LOCAL-00001" summary="Implement Task Logic">
      <created>1702614009023</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1702614009023</updated>
    </task>
    <task id="LOCAL-00002" summary="Implement Task Logic">
      <created>1702646009822</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1702646009822</updated>
    </task>
    <task id="LOCAL-00003" summary="feature: create logic of given functions and tests passed">
      <created>1702731505494</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1702731505494</updated>
    </task>
    <task id="LOCAL-00004" summary="fix: reformat code">
      <option name="closed" value="true" />
      <created>1703897004331</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1703897004331</updated>
    </task>
    <task id="LOCAL-00005" summary="fix: reformat README.md">
      <option name="closed" value="true" />
      <created>1703897593088</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1703897593088</updated>
    </task>
    <task id="LOCAL-00006" summary="fix: add test and entities">
      <option name="closed" value="true" />
      <created>1703897721382</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1703897721382</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Implement Task Logic" />
    <MESSAGE value="feature: create logic of given functions and tests passed" />
    <MESSAGE value="fix: reformat code" />
    <MESSAGE value="fix: reformat README.md" />
    <MESSAGE value="fix: add test and entities" />
    <option name="LAST_COMMIT_MESSAGE" value="fix: add test and entities" />
  </component>
</project>